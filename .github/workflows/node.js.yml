name: CI-develop

on:
  push:
    branches: [ develop ]
  pull_request:
    branches: [ develop ]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Cache node_modules
      uses: actions/cache@v4
      with:
        path: node_modules
        key: ${{ runner.os }}-node_modules-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-node_modules-

    - name: Set up Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}

    - name: Install dependencies
      run: yarn install --frozen-lockfile

    - name: Cache coverage folder
      uses: actions/cache@v3
      with:
        path: coverage
        key: ${{ runner.os }}-coverage-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-coverage-

    - name: Build the application
      run: yarn build

  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 2
    - run: git checkout HEAD^

    - name: Cache node_modules
      uses: actions/cache@v4
      with:
        path: node_modules
        key: ${{ runner.os }}-node_modules-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-node_modules-

    - name: Set up Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}

    - name: Install dependencies
      run: yarn install --frozen-lockfile

    - name: Cache coverage folder
      uses: actions/cache@v4
      with:
        path: coverage
        key: ${{ runner.os }}-coverage-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-coverage-
    - name: Run linters
      run: yarn lint
    - name: Run tests and generate coverage report
      run: yarn unitTestCoverage

  
